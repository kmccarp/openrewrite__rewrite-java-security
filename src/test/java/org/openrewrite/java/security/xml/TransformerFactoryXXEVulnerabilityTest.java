/*
 * Copyright 2023 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openrewrite.java.security.xml;

import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;
import org.openrewrite.DocumentExample;
import org.openrewrite.java.security.XmlParserXXEVulnerability;
import org.openrewrite.test.RecipeSpec;
import org.openrewrite.test.RewriteTest;

import static org.openrewrite.java.Assertions.java;

class TransformerFactoryXXEVulnerabilityTest implements RewriteTest {
    @Override
    public void defaults(RecipeSpec spec) {
        spec.recipe(new XmlParserXXEVulnerability());
    }

    @Nested
    class NotVulnerable {
        @Test
        void factoryIsNotVulnerable() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryIsNotVulnerableClassBlockInitialization() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      {
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      }
                      void XMLTransformer(Source source) {
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryIsNotVulnerableLiteral() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }
    }

    @DocumentExample
    @Test
    void factoryIsVulnerableNeedsAll() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableInsideIfBlock() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      if (true) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      if (true) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableInsideIfInsideTry() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      try {
                          if (true) {
                              TransformerFactory tf = TransformerFactory.newInstance();
                              Transformer transformer = tf.newTransformer(source);
                          }
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      try {
                          if (true) {
                              TransformerFactory tf = TransformerFactory.newInstance();
                              tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                              tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                              tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                              Transformer transformer = tf.newTransformer(source);
                          }
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtd() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsStylesheet() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndStylesheet() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsStylesheetAndFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndStylesheetWithLiteralFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Nested
    class Unchanged {
        @Test
        void factorySecureProcessingFalseUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false);
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryDtdValueNotEmptyUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "123");
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryStylesheetValueNotEmptyUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "abc");
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryDtdNonemptyButStylesheetEmptyUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "123");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryDtdEmptyButStylesheetNonemptyUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      void XMLTransformer(Source source) {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "abc");
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }

        @Test
        void factoryClassBlockInitializationUnchanged() {
            //language=java
            rewriteRun(
              java(
                """
                  import javax.xml.transform.TransformerFactory;
                  import javax.xml.transform.Transformer;
                  import javax.xml.XMLConstants;
                  import javax.xml.transform.Source;
                                
                  class MyTransformerFactory {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      {
                          tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", false);
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      }
                      void XMLTransformer(Source source) {
                          Transformer transformer = tf.newTransformer(source);
                      }
                  }
                  """
              )
            );
        }
    }

    @DocumentExample
    @Test
    void factoryConstructorInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
                            
              class MyTransformerFactory {
                  private TransformerFactory tf;
                  public MyTransformerFactory() {
                      tf = TransformerFactory.newInstance();
                  }
              }
              """,
            """
              import javax.xml.XMLConstants;
              import javax.xml.transform.TransformerFactory;
                            
              class MyTransformerFactory {
                  private TransformerFactory tf;
                  public MyTransformerFactory() {
                      tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerablePrivateStaticVariable() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  static TransformerFactory tf = TransformerFactory.newInstance();
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  static TransformerFactory tf = TransformerFactory.newInstance();
                  
                  static {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryNeedsStylesheetWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  
                  void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryToTransformerUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source) {
                      Transformer transformer = TransformerFactory.newInstance().newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void multipleVulnerableFactories() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
                            
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      Transformer transformer1 = tf1.newTransformer();
                  }
                      
                  void XMLTransformer2() {
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      Transformer transformer2 = tf2.newTransformer();
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Transformer;
                            
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf1.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer1 = tf1.newTransformer();
                  }
                      
                  void XMLTransformer2() {
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer2 = tf2.newTransformer();
                  }
              }
              """
          )
        );
    }

    @Test
    void multipleFactoriesFirstVulnerable() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source1, Source source2) {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      Transformer transformer1 = tf1.newTransformer(source1);
                      
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer2 = tf2.newTransformer(source2);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source1, Source source2) {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf1.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer1 = tf1.newTransformer(source1);
                      
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer2 = tf2.newTransformer(source2);
                  }
              }
              """
          )
        );
    }

    @Test
    void multipleFactoriesSecondVulnerable() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source1, Source source2) {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf1.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer1 = tf1.newTransformer(source1);
                      
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      Transformer transformer2 = tf2.newTransformer(source2);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
                            
              class MyTransformerFactory {
                  void XMLTransformer(Source source1, Source source2) {
                      TransformerFactory tf1 = TransformerFactory.newInstance();
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf1.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer1 = tf1.newTransformer(source1);
                      
                      TransformerFactory tf2 = TransformerFactory.newInstance();
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer2 = tf2.newTransformer(source2);
                  }
              }
              """
          )
        );
    }

    @Test
    void multipleFactoriesDirectTransformerNotVulnerableFirst() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      try {
                          Transformer transformer = TransformerFactory.newInstance().newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              
                  void XMLTransformer2() {
                      try {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          Transformer transformer = tf.newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Transformer;
              
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      try {
                          Transformer transformer = TransformerFactory.newInstance().newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              
                  void XMLTransformer2() {
                      try {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer = tf.newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """
          )
        );
    }

    @Test
    void multipleFactoriesDirectTransformerNotVulnerableSecond() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      try {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          Transformer transformer = tf.newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              
                  void XMLTransformer2() {
                      try {
                          Transformer transformer = TransformerFactory.newInstance().newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Transformer;
              
              class MyTransformerFactory {
                  void XMLTransformer1() {
                      try {
                          TransformerFactory tf = TransformerFactory.newInstance();
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer = tf.newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              
                  void XMLTransformer2() {
                      try {
                          Transformer transformer = TransformerFactory.newInstance().newTransformer();
                      } catch (Exception e) {
                          // no-op
                      }
                  }
              }
              """
          )
        );
    }

    @Test
    void fourFactoriesMixedVulnerabilities() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              
              class MyTransformerFactory {
                  TransformerFactory tf1 = TransformerFactory.newInstance();
                  
                  void XMLTransformer1() {
                      Transformer transformer1 = tf1.newTransformer();
                      if (true) {
                          TransformerFactory tf2 = TransformerFactory.newInstance();
                          tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer2 = tf2.newTransformer();
                      }
                  }
              
                  void XMLTransformer2() {
                      TransformerFactory tf3 = TransformerFactory.newInstance();
                      tf3.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf3.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer3 = tf3.newTransformer();
                      
                      TransformerFactory tf4 = TransformerFactory.newInstance();
                      Transformer transformer4 = tf4.newTransformer();
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              
              class MyTransformerFactory {
                  TransformerFactory tf1 = TransformerFactory.newInstance();
                  
                  {
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf1.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf1.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  
                  void XMLTransformer1() {
                      Transformer transformer1 = tf1.newTransformer();
                      if (true) {
                          TransformerFactory tf2 = TransformerFactory.newInstance();
                          tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                          tf2.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                          tf2.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                          Transformer transformer2 = tf2.newTransformer();
                      }
                  }
              
                  void XMLTransformer2() {
                      TransformerFactory tf3 = TransformerFactory.newInstance();
                      tf3.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf3.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf3.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer3 = tf3.newTransformer();
                      
                      TransformerFactory tf4 = TransformerFactory.newInstance();
                      tf4.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf4.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf4.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer4 = tf4.newTransformer();
                  }
              }
              """
          )
        );
    }
}
